# Generated by Django 5.2.6 on 2025-09-22 05:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'active'), ('closed', 'closed')], default='active', max_length=10)),
            ],
            options={
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(max_length=50)),
                ('entity_id', models.IntegerField()),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(null=True)),
                ('new_value', models.TextField(null=True)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('department', models.CharField(db_index=True, max_length=100)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('role', models.CharField(max_length=50)),
                ('is_deleted', models.BooleanField(default=False)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='performance_app.employee')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('self', 'self'), ('manager', 'manager'), ('peer', 'peer')], max_length=10)),
                ('status', models.CharField(choices=[('draft', 'draft'), ('submitted', 'submitted')], default='draft', max_length=10)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='performance_app.employee')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to='performance_app.employee')),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='performance_app.reviewcycle')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('target_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_started', 'not_started'), ('in_progress', 'in_progress'), ('completed', 'completed')], default='not_started', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='performance_app.employee')),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='performance_app.reviewcycle')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(choices=[('technical', 'technical'), ('communication', 'communication'), ('leadership', 'leadership'), ('goals', 'goals')], max_length=20)),
                ('score', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='performance_app.review')),
            ],
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['employee'], name='performance_employe_0c38f8_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['cycle'], name='performance_cycle_i_e6fd05_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['reviewer'], name='performance_reviewe_610a74_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('employee', 'cycle', 'reviewer', 'review_type')},
        ),
        migrations.AlterUniqueTogether(
            name='score',
            unique_together={('review', 'criteria')},
        ),
    ]
